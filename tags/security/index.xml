<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on CyrusN</title>
    <link>https://cyrusn.github.io/tags/security/</link>
    <description>Recent content in Security on CyrusN</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>cyrusncy@gmail.com (CyrusN)</managingEditor>
    <webMaster>cyrusncy@gmail.com (CyrusN)</webMaster>
    <lastBuildDate>Wed, 05 Oct 2016 00:23:42 +0000</lastBuildDate>
    
	<atom:link href="https://cyrusn.github.io/tags/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Web Authentication</title>
      <link>https://cyrusn.github.io/post/web-authentication/</link>
      <pubDate>Wed, 05 Oct 2016 00:23:42 +0000</pubDate>
      <author>cyrusncy@gmail.com (CyrusN)</author>
      <guid>https://cyrusn.github.io/post/web-authentication/</guid>
      <description>&lt;h1 id=&#34;notes&#34;&gt;Notes&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://auth0.com/blog/authentication-in-golang/&#34;&gt;Authentication in Golang with JWTs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://auth0.com/blog/cookies-vs-tokens-definitive-guide/&#34;&gt;Cookies vs Tokens: The Definitive Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://scotch.io/tutorials/the-ins-and-outs-of-token-based-authentication&#34;&gt;The Ins and Outs of Token Based Authentication | Scotch&lt;/a&gt;</description>
    </item>
    
    <item>
      <title>SSL TLS</title>
      <link>https://cyrusn.github.io/post/ssl-tls/</link>
      <pubDate>Sun, 25 Sep 2016 21:27:54 +0000</pubDate>
      <author>cyrusncy@gmail.com (CyrusN)</author>
      <guid>https://cyrusn.github.io/post/ssl-tls/</guid>
      <description>Transport Layer Security (TLS) and its predecessor, Secure Sockets Layer (SSL), are cryptographic protocols designed to provide communications security over a computer network.
The authentication relied on Certificate Authorities (CA) and a public key infrastructure using X.509 certificates. The server register with a CA and sign its public key with the key of CA for a fee. The client, after receiving the public key from server, verifies it with the CA.</description>
    </item>
    
  </channel>
</rss>