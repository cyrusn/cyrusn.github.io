<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssl on Notebook | CyrusN</title>
    <link>https://cyrusn.github.io/tags/ssl/</link>
    <description>Recent content in Ssl on Notebook | CyrusN</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>cyrusncy@gmail.com (CyrusN)</managingEditor>
    <webMaster>cyrusncy@gmail.com (CyrusN)</webMaster>
    <lastBuildDate>Thu, 29 Sep 2016 08:31:57 +0000</lastBuildDate>
    
	<atom:link href="https://cyrusn.github.io/tags/ssl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Config Digital Ocean Droplet as Microservice</title>
      <link>https://cyrusn.github.io/note/config-digtal-ocean-droplet-as-microservice/</link>
      <pubDate>Thu, 29 Sep 2016 08:31:57 +0000</pubDate>
      <author>cyrusncy@gmail.com (CyrusN)</author>
      <guid>https://cyrusn.github.io/note/config-digtal-ocean-droplet-as-microservice/</guid>
      <description>Objective This page is a notes for setting apache server for my digital ocean droplet
Setting Apache2  in file /etc/hosts
 change 127.0.0.1 localhost to 127.0.1.1 localhost WordPress-CaLP-LPSS  change Port
 in file /etc/apache2/port.conf add ServerName localhost change the line listen *:80 to listen 127.0.0.1:4000 disable other modules &amp;lt;IfModule ssl_module&amp;gt; and &amp;lt;IfModule mod_gnutls.c&amp;gt; in file /etc/apache2/site-enabled/000-default.conf change the line &amp;lt;VirtualHost *:80&amp;gt; to &amp;lt;VirtualHost localhost:4000&amp;gt;  restart apache2</description>
    </item>
    
    <item>
      <title>SSL TLS</title>
      <link>https://cyrusn.github.io/note/ssl-tls/</link>
      <pubDate>Sun, 25 Sep 2016 21:27:54 +0000</pubDate>
      <author>cyrusncy@gmail.com (CyrusN)</author>
      <guid>https://cyrusn.github.io/note/ssl-tls/</guid>
      <description>Transport Layer Security (TLS) and its predecessor, Secure Sockets Layer (SSL), are cryptographic protocols designed to provide communications security over a computer network.
The authentication relied on Certificate Authorities (CA) and a public key infrastructure using X.509 certificates. The server register with a CA and sign its public key with the key of CA for a fee. The client, after receiving the public key from server, verifies it with the CA.</description>
    </item>
    
  </channel>
</rss>